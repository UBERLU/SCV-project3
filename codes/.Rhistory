data_sample$days <-as.Date.character(data_sample$Trip.Start.Timestamp, format = "%m/%d/%Y")
head(data_sample$days)
as.Date.character(data_sample$days, format = "%m")
month(data_sample$days)
data_sample$month <- month(data_sample$days)
ggplot(data_sample, aes(x = month, y = Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
data_sample$Pickup.Community.Area <- as.character(data_sample$Pickup.Community.Area)
ggplot(data_sample, aes(x = month, y = Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
ggplot(sample_common_ares, aes(x = month, y = Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
# First take subset of the most common Areas
sample_common_ares <- subset(data_sample, Pickup.Community.Area == 56 | Pickup.Community.Area == 77 | Pickup.Community.Area == 3 | Pickup.Community.Area == 7 | Pickup.Community.Area == 33 | Pickup.Community.Area == 6 | Pickup.Community.Area == 76 | Pickup.Community.Area == 28 | Pickup.Community.Area == 32 | Pickup.Community.Area == 8)
ggplot(sample_common_ares, aes(x = month, y = Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
typeof(sample_common_ares$month)
data_sample$month <- as.character(data_sample$month)
ggplot(sample_common_ares, aes(x = month, y = Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
head(sample_common_ares$month)
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
data_sample <- data_sample %>%
mutate(log.Trip.Total = log(Trip.Total))
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
# First take subset of the most common Areas
sample_common_ares <- subset(data_sample, Pickup.Community.Area == 56 | Pickup.Community.Area == 77 | Pickup.Community.Area == 3 | Pickup.Community.Area == 7 | Pickup.Community.Area == 33 | Pickup.Community.Area == 6 | Pickup.Community.Area == 76 | Pickup.Community.Area == 28 | Pickup.Community.Area == 32 | Pickup.Community.Area == 8)
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
data_sample$month <- as.Date(data_sample$month)
typeof(sample_common_ares$days)
data_sample$month <- month(data_sample$days)
typeof(data_sample$month)
as.Date(data_sample$month)
as.Date.character(data_sample$month)
as.Date.character(data_sample$month, format = "%m)
)
)
data_sample$month <- month(data_sample$days)
data_sample$month <- as.Date.character(data_sample$month, format = "%m)
data_sample$month <- month(data_sample$days)
data_sample$month <- as.Date.character(data_sample$month, format = "%m")
data_sample$month
data_sample$month <- month(data_sample$days)
data_sample$month
data_sample$month <- as.factor(data_sample$month)
levels(data_sample$month)
levels(data_sample$month) <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
head(data_sample$month)
?factor
factor(data_sample$month,levels(data_sample$month),ordered = True)
factor(data_sample$month,levels(data_sample$month),ordered = TRUE)
levels(data_sample$month) <- factor(data_sample$month,levels(data_sample$month),ordered = TRUE)
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
# First take subset of the most common Areas
sample_common_ares <- subset(data_sample, Pickup.Community.Area == 56 | Pickup.Community.Area == 77 | Pickup.Community.Area == 3 | Pickup.Community.Area == 7 | Pickup.Community.Area == 33 | Pickup.Community.Area == 6 | Pickup.Community.Area == 76 | Pickup.Community.Area == 28 | Pickup.Community.Area == 32 | Pickup.Community.Area == 8)
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) + geom_line(aes(color = Pickup.Community.Area), size = 1)
interaction.plot(sample_coomon_ares$month,sample_coomon_ares$Pickup.Community.Area,sample_coomon_ares$log.Trip.Total,col=cols,
main="interaction.plot",lwd=1.1,lty=1)
interaction.plot(sample_comon_ares$month,sample_comon_ares$Pickup.Community.Area,sample_comon_ares$log.Trip.Total,col=cols,
main="interaction.plot",lwd=1.1,lty=1)
interaction.plot(sample_common_ares$month,sample_common_ares$Pickup.Community.Area,sample_common_ares$log.Trip.Total,col=cols,
main="interaction.plot",lwd=1.1,lty=1)
head(data_sample$month)
levels(data_sample$month) <- factor(data_sample$month,levels(data_sample$month),ordered = TRUE)
head(data_sample$month)
ggplot(sample_common_ares, aes(x = month(), y = log.Trip.Total)) +
geom_line(aes(color = variable), size = 1)
ggplot(sample_common_ares, aes(x = month(), y = log.Trip.Total)) +
geom_line(aes(color = Pickup.Community.Area), size = 1)
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) +
geom_line(aes(color = Pickup.Community.Area), size = 1)
ts(data_sample$month)
?ts
levels(data_sample$month) <- factor(data_sample$month,levels = data_sample$month,ordered = TRUE)
(
levels(data_sample$month)
.
levels(data_sample$month)
factor(data_sample$month,levels(data_sample$month),ordered = TRUE)
data_sample$month <- factor(data_sample$month, levels= c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), ordered=TRUE)
data_sample$month
data_sample$days <-as.Date.character(data_sample$Trip.Start.Timestamp, format = "%m/%d/%Y")
data_sample$month <- month(data_sample$days)
data_sample$month <- as.factor(data_sample$month)
levels(data_sample$month) <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
data_sample$month <- factor(data_sample$month, levels= c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), ordered=TRUE)
# First take subset of the most common Areas
sample_common_ares <- subset(data_sample, Pickup.Community.Area == 56 | Pickup.Community.Area == 77 | Pickup.Community.Area == 3 | Pickup.Community.Area == 7 | Pickup.Community.Area == 33 | Pickup.Community.Area == 6 | Pickup.Community.Area == 76 | Pickup.Community.Area == 28 | Pickup.Community.Area == 32 | Pickup.Community.Area == 8)
View(sample_common_ares)
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) +
geom_line(aes(color = Pickup.Community.Area), size = 0.5)
typeof(sample_common_ares)
typeof(sample_common_ares$log.Trip.Total)
ggplot(sample_common_ares, aes(x = month, y = as.numeric(log.Trip.Total))) +
geom_line(aes(color = Pickup.Community.Area), size = 0.5)
DT[mean(log.Trip.Total), by = month]
# Get a data table to aggrgate the log trip by month
dt = as.data.table(sample_common_ares)
dt[mean(log.Trip.Total), by = month]
# Get a data table to aggrgate the log trip by month
as.data.table(sample_common_ares)
#Aggregate the log trip by month
aggregate(sample_common_ares$log.Trip.Total, by = sample_common_ares$Pickup.Community.Area, mean)
#Aggregate the log trip by month
aggregate(log.Trip.Total ~ Pickup.Community.Area, data = sample_common_ares, mean)
#Aggregate the log trip by month
aggregate(Trip.Total ~ Pickup.Community.Area, data = sample_common_ares, mean)
#Aggregate the log trip by month
mean.total.trip.area <- aggregate(Trip.Total ~ Pickup.Community.Area, data = sample_common_ares, mean)
mean.total.trip.area
#Aggregate the log trip by month
mean.total.trip.area <- aggregate(Trip.Total ~ Pickup.Community.Area + month, data = sample_common_ares, mean)
mean.total.trip.area
ggplot(sample_common_ares, aes(x = month, y = as.numeric(Trip.Total))) +
geom_line(aes(color = Pickup.Community.Area), size = 0.5)
ggplot(mean.total.trip.area, aes(x = month, y = as.numeric(Trip.Total))) +
geom_line(aes(color = Pickup.Community.Area), size = 0.5)
ggplot(mean.total.trip.area, aes(x = month, y = Trip.Total)) +
geom_line(aes(color = Pickup.Community.Area), size = 0.5)
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) +
geom_area(aes(color = Pickup.Community.Area, fill = variable))
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) +
geom_area(aes(color = Pickup.Community.Area, fill = Pickup.Community.Area)))
ggplot(sample_common_ares, aes(x = month, y = log.Trip.Total)) +
geom_area(aes(color = Pickup.Community.Area, fill = month)))
ggplot(data=sample_common_ares, aes(x=month, y=log.Trip.Total, group=Pickup.Community.Area, color=Pickup.Community.Area))+
geom_line(stat='summary', fun.y='mean') +
geom_point(stat='summary', fun.y='mean')
# Let's first load the packages we will use further in the analysis
library(ggplot2)
library(data.table)
library(dplyr)
library(ggrepel)
library(tidyverse)
library(psych)
library(qqplotr)
# We will work on a random subset of the dataset as the data is very large and the computations take too much time
data_sample = data[sample(nrow(data), 10000), ]
# Basic Statistics
describe(data_sample)
str(data_sample)
typeof(data_sample)
df = as.data.frame(data_sample)
# Allows to see whether the variable is continuous or categorical
qplot(data_sample$Trip.Total,
geom="histogram",
geom = "density"
binwidth = 100,
qplot(data_sample$Trip.Total,
geom="histogram",
geom = "density"
# binwidth = 100,
main = "Histogram for Trip Total",
qplot(data_sample$Trip.Total,
geom="histogram",
geom = "density",
# binwidth = 100,
main = "Histogram for Trip Total",
xlab = "Trip.Total",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(data_sample$Trip.Total,
geom="histogram",
binwidth = 100,
main = "Histogram for Trip Total",
xlab = "Trip.Total",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(data_sample$Trip.Total,
geom="histogram",
binwidth = 100,
main = "Histogram for Trip Total",
xlab = "Trip.Total",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
ggplot(data=data_sample , aes(log.Trip.Total)) + geom_histogram(aes(y=..density..),bins=100) + geom_density(col="red") + scale_x_log10()+ theme_classic()
data_sample <- data_sample %>%
mutate(log.Trip.Total = log(Trip.Total))
ggplot(data=data_sample , aes(log.Trip.Total)) + geom_histogram(aes(y=..density..),bins=100) + geom_density(col="red") + scale_x_log10()+ theme_classic()
ggplot(data=data_sample , aes(log.Trip.Total)) + geom_histogram(aes(y=..density..),bins=10) + geom_density(col="red") + scale_x_log10()+ theme_classic()
ggplot(data=data_sample , aes(log.Trip.Total)) + geom_histogram(aes(y=..density..),bins=50) + geom_density(col="red") + scale_x_log10()+ theme_classic()
# First take subset of the most common Areas
sample_common_ares <- subset(data_sample, Pickup.Community.Area == 56 | Pickup.Community.Area == 77 | Pickup.Community.Area == 3 | Pickup.Community.Area == 7 | Pickup.Community.Area == 33 | Pickup.Community.Area == 6 | Pickup.Community.Area == 76 | Pickup.Community.Area == 28 | Pickup.Community.Area == 32 | Pickup.Community.Area == 8)
sample_common_ares[,"Pickup.Community.Area"] <- as.factor(sample_common_ares[,"Pickup.Community.Area"])
sapply(sample_common_ares, class)
ggplot(sample_common_ares, aes(Pickup.Community.Area, log.Trip.Total)) + geom_boxplot() + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
ggplot(sample_common_ares, aes(x=log.Trip.Total, fill=Pickup.Community.Area)) +
geom_histogram( color='#e9ecef', alpha=0.6, position='identity', bins = 50)
ggplot(sample_common_ares, aes(x=log.Trip.Total, fill=Pickup.Community.Area)) +
geom_histogram( color='#e9ecef', alpha=0.6, position='identity', bins = 50)
ggplot(sample_common_ares, aes(x=log.Trip.Total, fill=Pickup.Community.Area)) +
geom_density( color='#e9ecef', alpha=0.6, position='identity', bins = 50)
ggplot(data_sample, aes(Trip.Total)) + geom_boxplot() +geom_boxplot(outlier.colour = "red", outlier.shape = 1) + geom_boxplot(fill = "white", colour = "#3366FF") + coord_flip()
ggplot(data_sample, aes(log.Trip.Total)) + geom_boxplot() + geom_boxplot(outlier.colour = "red", outlier.shape = 1) + geom_boxplot(fill = "white", colour = "#3366FF") + coord_flip()
qplot(data_sample$Trip.Seconds,
geom="histogram",
binwidth = 100,
main = "Histogram for Trip Seconds",
xlab = "Trip.Seconds",
fill=I("blue"),
col=I("red"),
alpha=I(.2)) # power law
qplot(data_sample$Trip.Total,
geom="histogram",
binwidth = 80,
main = "Histogram for Trip Total",
xlab = "Trip.Total",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(data_sample$Trip.Total,
geom="histogram",
binwidth = 50,
main = "Histogram for Trip Total",
xlab = "Trip.Total",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(data_sample$Trip.Miles,
geom="histogram",
binwidth = 50,
main = "Histogram for Trip Miles",
xlab = "Trip.Miles",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(data_sample$Trip.Miles,
geom="histogram",
binwidth = 10,
main = "Histogram for Trip Miles",
xlab = "Trip.Miles",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(data_sample$Trip.Miles,
geom="histogram",
binwidth = 5,
main = "Histogram for Trip Miles",
xlab = "Trip.Miles",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
data_sample <- data_sample %>%
mutate(log.Trip.Total = log(Trip.Total))
qplot(data_sample$log.Trip.Total,
geom="histogram",
binwidth = 0.2,
main = "Histogram for Log Trip Total",
xlab = "Log Trip.Total",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
ggplot(data=data_sample , aes(log.Trip.Total)) + geom_histogram(aes(y=..density..),bins=50) + geom_density(col="red") + scale_x_log10()+ theme_classic()
qplot(data_sample$log.Trip.Seconds,
geom="histogram",
binwidth = 0.2,
main = "Histogram for log Trip Seconds",
xlab = "log.Trip.Seconds",
fill=I("blue"),
col=I("red"),
alpha=I(.2)) # power law
data_sample <- data_sample %>%
mutate(log.Trip.Seconds = log(Trip.Seconds))
qplot(data_sample$log.Trip.Seconds,
geom="histogram",
binwidth = 0.2,
main = "Histogram for log Trip Seconds",
xlab = "log.Trip.Seconds",
fill=I("blue"),
col=I("red"),
alpha=I(.2)) # power law
data_sample$Pickup.Community.Area <- as.factor(data_sample$Pickup.Community.Area)
levels(data_sample$Pickup.Community.Area)
data_sample$Pickup.Community.Area <- as.factor(data_sample$Pickup.Community.Area)
levels(data_sample$Pickup.Community.Area) <- c("Rogers Park", "West Ridge", "Uptown", "Lincoln Square", "North Center",
"Lake View", "Lincoln Park", "Near North Side", "Edison Park", "Norwood Park",
"Jefferson Park", "Forest Glen", "North Park", "Albany Park", "Portage Park",
"Irving Park", "Dunning", "Montclare", "Belmont Cragin", "Hermosa",
"Avondale", "Logan Square", "Humboldt Park", "West Town", "Austin",
"West Garfield Park", "East Garfield Park", "Near West Side", "North Lawndale", "South Lawndale",
"Lower West Side", "(The)  Loop[11]", "Near South Side", "Armour Square","Douglas",
"Oakland", "Fuller Park", "Grand Boulevard", "Kenwood", "Washington Park",
"Hyde Park", "Woodlawn", "South Shore","Chatham", "Avalon Park",
"South Chicago", "Burnside", "Calumet Heights" ,"Roseland", "Pullman",
"South Deering", "East Side", "West Pullman", "Riverdale", "Hegewisch",
"Garfield Ridge", "Archer Heights", "Brighton Park", "McKinley Park", "Bridgeport",
"New City","West Elsdon","Gage Park", "Clearing", "West Lawn",
"Chicago Lawn", "West Englewood", "Englewood", "Greater Grand Crossing", "Ashburn",
"Auburn Gresham","Beverly","Washington Heights", "Mount Greenwood", "Morgan Park",
"O'Hare","Edgewater")
levels(data_sample$Pickup.Community.Area)
levels(data_sample$Dropoff.Community.Area)
data_sample$Dropoff.Community.Area <- as.factor(data_sample$Dropoff.Community.Area)
levels(data_sample$Dropoff.Community.Area)
levels(data_sample$Dropoff.Community.Area) <- c("Rogers Park", "West Ridge", "Uptown", "Lincoln Square", "North Center",
"Lake View", "Lincoln Park", "Near North Side", "Edison Park", "Norwood Park",
"Jefferson Park", "Forest Glen", "North Park", "Albany Park", "Portage Park",
"Irving Park", "Dunning", "Montclare", "Belmont Cragin", "Hermosa",
"Avondale", "Logan Square", "Humboldt Park", "West Town", "Austin",
"West Garfield Park", "East Garfield Park", "Near West Side", "North Lawndale", "South Lawndale",
"Lower West Side", "(The)  Loop[11]", "Near South Side", "Armour Square","Douglas",
"Oakland", "Fuller Park", "Grand Boulevard", "Kenwood", "Washington Park",
"Hyde Park", "Woodlawn", "South Shore","Chatham", "Avalon Park",
"South Chicago", "Burnside", "Calumet Heights" ,"Roseland", "Pullman",
"South Deering", "East Side", "West Pullman", "Riverdale", "Hegewisch",
"Garfield Ridge", "Archer Heights", "Brighton Park", "McKinley Park", "Bridgeport",
"New City","West Elsdon","Gage Park", "Clearing", "West Lawn",
"Chicago Lawn", "West Englewood", "Englewood", "Greater Grand Crossing", "Ashburn",
"Auburn Gresham","Beverly","Washington Heights", "Mount Greenwood", "Morgan Park",
"O'Hare","Edgewater")
pickup_areas_ordered <- table(data_sample$Pickup.Community.Area)
pickup_areas_ordered
pickup_areas_ordered <- table(data_sample$Pickup.Community.Area)
pickup_areas_ordered <- table(data_sample$Pickup.Community.Area) # frequency of areas
pickup_areas_ordered <- as.data.frame(pickup_areas_ordered) # to dataframe
pickup_areas_ordered
pickup_areas_ordered <- pickup_areas_ordered[order(pickup_areas_ordered$Freq, decreasing = TRUE),]
pickup_areas_ordered
top_pickup <- pickup_areas_ordered[1:10,] # select 10 most common areas
bottom_pickup <- pickup_areas_ordered[11:77,] # select the rest of least common areas
sum_bottom = sum(as.numeric(bottom_pickup$Freq), na.rm = TRUE) # sum up the frequencies of the least common areas
top_pickup <- top_pickup %>% add_row(Var1 = "Other", Freq = sum_bottom) # add the sum bottom to top_pickup
top_pickup$Freq <- as.numeric(top_pickup$Freq)
# Getting proportions of the frequencies
top_pickup <- top_pickup %>%
mutate(Proportion = Freq/sum(Freq))
top_pickup
ggplot(top_pickup, aes(x=Var1, y=Freq, color=Var1)) +
geom_bar(stat="identity", fill="white") + xlab("Frequency") + ylab("Pick Up Area") + ggtitle("Frequency by Area") + theme(text = element_text(size=10),
axis.text.x = element_text(angle=90, hjust=1))
# Get the positions
# Get the positions
top_pickup2 <- top_pickup %>%
mutate(csum = rev(cumsum(rev(Freq))),
pos = Freq/2 + lead(csum, 1),
pos = if_else(is.na(pos), Freq/2, pos))
ggplot(top_pickup_pc, aes(x = "" , y = Freq, fill = fct_inorder(Var1))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Set3") +
#geom_label_repel(data = top_pickup2,
#  aes(y = pos, label = paste0(Freq, "%")),
#  size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Pick Up Area")) +
theme_void()+  ggtitle("Frequency by Area")
top_pickup_pc
top_pickup <- pickup_areas_ordered[1:10,] # select 10 most common areas
bottom_pickup <- pickup_areas_ordered[11:77,] # select the rest of least common areas
sum_bottom = sum(as.numeric(bottom_pickup$Freq), na.rm = TRUE) # sum up the frequencies of the least common areas
top_pickup <- top_pickup %>% add_row(Var1 = "Other", Freq = sum_bottom) # add the sum bottom to top_pickup
top_pickup$Freq <- as.numeric(top_pickup$Freq)
# Getting proportions of the frequencies
top_pickup <- top_pickup %>%
mutate(Proportion = Freq/sum(Freq))
top_pickup
load("/Users/darynabilodid/Documents/GitHub/SCV-project3/data.RData")
View(my_data)
setwd("~/Documents/GitHub/SCV-project3/codes")
load(my_data)
load("/Users/darynabilodid/Documents/GitHub/SCV-project3.data.RData")
get(load("/Users/darynabilodid/Documents/GitHub/SCV-project3/data.RData"))
View(my_data)
attach(data)
attach(my_data)
typeof(Genre)
my_data$Genre <- as.factor(Genre)
levels(Genre)
my_data$Type.of.acquisition <- as.factor(Type.of.acquisition)
levels(Type.of.acquisition)
my_data$Canton <- as.factor(Canton)
levels(Canton)
my_data$Year <- as.factor(Year)
levels(Year)
my_data$Age <- as.factor(Age)
levels(Age)
my_data$Previous.citizenship <- as.factor(Previous.citizenship)
levels(Previous.citizenship)
levels(Genre)
levels(Genre) <-c("Sex - total","Male","Female")
levels(Genre)
levels(Type.of.acquisition)
levels(Type.of.acquisition) <- c("Type of acquisition - total",
"Ordinary naturalisation",
"Simplified naturalisation",
"Reintegration",
"Confirmation of the Swiss nationality",
"Naturalisation by adoption")
levels(Canton)
View(my_data)
View(my_data)
levels(my_data$Genre) <-c("Sex - total","Male","Female")
levels(my_data$Type.of.acquisition) <- c("Type of acquisition - total",
"Ordinary naturalisation",
"Simplified naturalisation",
"Reintegration",
"Confirmation of the Swiss nationality",
"Naturalisation by adoption")
rm(Renre, Type.of.acquisition)
rm(Genre)
levels(my_data$Canton) <-
c("Switzerland","Zürich","Bern / Berne",
"Luzern","Uri","Schwyz","Obwalden",
"Nidwalden","Glarus","Zug","Fribourg / Freiburg",
"Solothurn","Basel-Stadt","Basel-Landschaft",
"Schaffhausen","Appenzell Ausserrhoden",
"Appenzell Innerrhoden","St. Gallen",
"Graubünden / Grigioni / Grischun",
"Aargau","Thurgau","Ticino","Vaud",
"Valais / Wallis","Neuchâtel",
"Genève","Jura","Unknown")
levels(my_data$Canton) <-
len(c("Switzerland","Zürich","Bern / Berne",
"Luzern","Uri","Schwyz","Obwalden",
"Nidwalden","Glarus","Zug","Fribourg / Freiburg",
"Solothurn","Basel-Stadt","Basel-Landschaft",
"Schaffhausen","Appenzell Ausserrhoden",
"Appenzell Innerrhoden","St. Gallen",
"Graubünden / Grigioni / Grischun",
"Aargau","Thurgau","Ticino","Vaud",
"Valais / Wallis","Neuchâtel",
"Genève","Jura","Unknown"))
levels(my_data$Canton) <-
len(c("Switzerland","Zürich","Bern / Berne",
"Luzern","Uri","Schwyz","Obwalden",
"Nidwalden","Glarus","Zug","Fribourg / Freiburg",
"Solothurn","Basel-Stadt","Basel-Landschaft",
"Schaffhausen","Appenzell Ausserrhoden",
"Appenzell Innerrhoden","St. Gallen",
"Graubünden / Grigioni / Grischun",
"Aargau","Thurgau","Ticino","Vaud",
"Valais / Wallis","Neuchâtel",
"Genève","Jura","Unknown"))
levels(my_data$Canton) <-
length(c("Switzerland","Zürich","Bern / Berne",
"Luzern","Uri","Schwyz","Obwalden",
"Nidwalden","Glarus","Zug","Fribourg / Freiburg",
"Solothurn","Basel-Stadt","Basel-Landschaft",
"Schaffhausen","Appenzell Ausserrhoden",
"Appenzell Innerrhoden","St. Gallen",
"Graubünden / Grigioni / Grischun",
"Aargau","Thurgau","Ticino","Vaud",
"Valais / Wallis","Neuchâtel",
"Genève","Jura","Unknown"))
levels(my_data$Canton) <- c("Switzerland","Zürich","Bern / Berne",
"Luzern","Uri","Schwyz","Obwalden",
"Nidwalden","Glarus","Zug","Fribourg / Freiburg",
"Solothurn","Basel-Stadt","Basel-Landschaft",
"Schaffhausen","Appenzell Ausserrhoden",
"Appenzell Innerrhoden","St. Gallen",
"Graubünden / Grigioni / Grischun",
"Aargau","Thurgau","Ticino","Vaud",
"Valais / Wallis","Neuchâtel",
"Genève","Jura","Unknown")
levels(my_data$Canton)
levels(my_data$Previous.citizenship)
length(c("Previous citizenship - total","Switzerland","Albania","Andorra","Belgium","Bulgaria","Denmark","Germany","Finland","France","Greece","United Kingdom","Ireland","Iceland","Italy","Liechtenstein","Luxembourg","Malta","Monaco","Netherlands","Norway","Austria","Poland","Portugal","Romania","San Marino","Sweden","Spain","Turkey","Hungary","Vatican City State","Cyprus","Slovakia","Czechia","Serbia","Croatia","Slovenia","Bosnia and Herzegovina","Montenegro","North Macedonia","Kosovo","Estonia","Latvia","Lithuania","Moldova","Russia","Ukraine","Belarus","Equatorial Guinea","Ethiopia","Djibouti","Algeria","Angola","Botswana","Burundi","Benin","Côte d'Ivoire","Gabon","Gambia","Ghana","Guinea-Bissau","Guinea","Cameroon","Cabo Verde","Kenya","Comoros","Congo (Brazzaville)","Congo (Kinshasa)","Lesotho","Liberia","Libya","Madagascar","Malawi","Mali","Morocco","Mauritania","Mauritius","Mozambique","Niger","Nigeria","Burkina Faso","Zimbabwe","Rwanda","Zambia","Sao Tomé and Principe","Senegal","Seychelles","Sierra Leone","Somalia","South Africa","Sudan","Namibia","Eswatini","Tanzania","Togo","Chad","Tunisia","Uganda","Egypt","Central African Republic","Eritrea","South Sudan","Western Sahara","Argentina","Bahamas","Barbados","Bolivia","Brazil","Chile","Costa Rica","Dominican Republic","Ecuador","El Salvador","Guatemala","Guyana","Haiti","Belize","Honduras","Jamaica","Canada","Colombia","Cuba","Mexico","Nicaragua","Panama","Paraguay","Peru","Suriname","Trinidad and Tobago","Uruguay","Venezuela","United States","Dominica","Grenada","Antigua and Barbuda","Saint Lucia","Saint Vincent and the Grenadines","Saint Kitts and Nevis","Afghanistan","Bahrain","Bhutan","Brunéi Darussalam","Myanmar","Sri Lanka","Taiwan (Chinese Taipei)","China","India","Indonesia","Iraq","Iran","Israel","Japan","Yemen","Jordan","Cambodia","Qatar","Kuwait","Laos","Lebanon","Malaysia","Maldives","Oman","Mongolia","Nepal","North Korea","United Arab Emirates","Pakistan","Philippines","Saudi Arabia","Singapore","South Korea","Syria","Thailand","Vietnam","Bangladesh","Timor-Leste","Palestine","Armenia","Azerbaijan","Georgia","Kazakhstan","Kyrgyzstan","Tajikistan","Turkmenistan","Uzbekistan","Australia","Fiji","Nauru","Vanuatu","New Zealand","Papua New Guinea","Tonga","Samoa","Solomon Islands","Tuvalu","Kiribati","Marshall Islands","Micronesia","Palau","Cook Islands","Stateless","Not attributable according to current borders","Unknown")
)
levels(my_data$Previous.citizenship)
levels(my_data$Previous.citizenship)  <- c("Previous citizenship - total","Switzerland","Albania","Andorra",
"Belgium","Bulgaria","Denmark","Germany",
"Finland","France","Greece","United Kingdom","Ireland","Iceland",
"Italy","Liechtenstein","Luxembourg","Malta","Monaco","Netherlands",
"Norway","Austria","Poland","Portugal","Romania","San Marino",
"Sweden","Spain","Turkey","Hungary","Vatican City State","Cyprus",
"Slovakia","Czechia","Serbia","Croatia","Slovenia","Bosnia and Herzegovina",
"Montenegro","North Macedonia","Kosovo","Estonia","Latvia","Lithuania",
"Moldova","Russia","Ukraine","Belarus","Equatorial Guinea","Ethiopia",
"Djibouti","Algeria","Angola","Botswana","Burundi","Benin","Côte d'Ivoire",
"Gabon","Gambia","Ghana","Guinea-Bissau","Guinea","Cameroon","Cabo Verde",
"Kenya","Comoros","Congo (Brazzaville)","Congo (Kinshasa)","Lesotho",
"Liberia","Libya","Madagascar","Malawi","Mali","Morocco","Mauritania",
"Mauritius","Mozambique","Niger","Nigeria","Burkina Faso","Zimbabwe","Rwanda",
"Zambia","Sao Tomé and Principe","Senegal","Seychelles","Sierra Leone",
"Somalia","South Africa","Sudan","Namibia","Eswatini","Tanzania",
"Togo","Chad","Tunisia","Uganda","Egypt","Central African Republic",
"Eritrea","South Sudan","Western Sahara","Argentina","Bahamas","Barbados",
"Bolivia","Brazil","Chile","Costa Rica","Dominican Republic","Ecuador",
"El Salvador","Guatemala","Guyana","Haiti","Belize","Honduras","Jamaica",
"Canada","Colombia","Cuba","Mexico","Nicaragua","Panama","Paraguay","Peru",
"Suriname","Trinidad and Tobago","Uruguay","Venezuela","United States","Dominica",
"Grenada","Antigua and Barbuda","Saint Lucia","Saint Vincent and the Grenadines",
"Saint Kitts and Nevis","Afghanistan","Bahrain","Bhutan","Brunéi Darussalam","Myanmar",
"Sri Lanka","Taiwan (Chinese Taipei)","China","India","Indonesia","Iraq","Iran","Israel",
"Japan","Yemen","Jordan","Cambodia","Qatar","Kuwait","Laos","Lebanon","Malaysia",
"Maldives","Oman","Mongolia","Nepal","North Korea","United Arab Emirates","Pakistan",
"Philippines","Saudi Arabia","Singapore","South Korea","Syria","Thailand","Vietnam",
"Bangladesh","Timor-Leste","Palestine","Armenia","Azerbaijan","Georgia","Kazakhstan",
"Kyrgyzstan","Tajikistan","Turkmenistan","Uzbekistan","Australia","Fiji","Nauru","Vanuatu",
"New Zealand","Papua New Guinea","Tonga","Samoa","Solomon Islands","Tuvalu","Kiribati",
"Marshall Islands","Micronesia","Palau","Cook Islands","Stateless",
"Not attributable according to current borders","Unknown")
levels(Canton)
length(levels(my_data$Age))
as.numeric(my_data$Year)
regmatches(my_data$Year, gregexpr("[[:digit:]]+", my_data$Year))
levels(my_data$Age)
length(levels(my_data$Year))
length(levels(my_data$Age))
as.numeric(gsub(".*?([0-9]+).*", "\\1", my_data$Year))
my_data$Year <- as.numeric(gsub(".*?([0-9]+).*", "\\1", my_data$Year))
as.numeric(gsub(".*?([0-9]+).*", "\\1", my_data$Age))
my_data$Age <- as.numeric(gsub(".*?([0-9]+).*", "\\1", my_data$Age))
save(my_data, file = 'my_data_French.RData')
View(my_data)
levels(Canton)
levels(my_data$Canton)
-0.1312 - 9.141e-05
9.157e-05
sprintf(9.157e-05)
format(9.157e-05, scientific = F, digits = 10)
###
my_data[my_data$Year == 2011, ]
###
data_2011 = my_data[my_data$Year == 2011, ]
